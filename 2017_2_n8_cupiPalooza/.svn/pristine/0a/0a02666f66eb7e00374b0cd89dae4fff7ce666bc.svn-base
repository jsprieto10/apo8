/**
     * Guarda el estado del sistema en un archivo serializado. <br>
     * <b>post: </b> Se guardó la lista de escenarios en el archivo dado. <br>
     * @param pRuta Ruta del archivo donde se guarda el estado del sistema. pRuta != null && pRuta != "".
     * @throws PersistenciaException Se lanza una excepción si hay algún error guardando los datos del archivo.
     */
    public void guardar( String pRuta ) throws PersistenciaException
    


/**
     * Carga el estado del sistemas de un archivo serializado. <br>
     * <b>post: </b> Se inicializó la lista de escenarios a partir del archivo dado. <br>
     * @param pArchivo Archivo con la información del sistema. pArchivo != null.
     * @throws PersistenciaException Se lanza una excepción si hay algún error cargando los datos del archivo.
     */
    public void cargar( String pArchivo ) throws PersistenciaException
    

/**
     * Carga el estado del festival de un archivo de texto. <br>
     * <b>post: </b> Se carga la información de los escenarios y las bandas que se encuentran en el archivo. <br>
     * @param pNombreArchivo Archivo con la información del sistema. pNombreArchivo != null.
     * @throws PersistenciaException Se lanza una excepción si hay algún error cargando los datos del archivo.
     * @throws FormatoArchivoException Si el formato del archivo es erróneo y no puede ser leído.
     */
    public void importarArchivoTexto( File pNombreArchivo ) throws PersistenciaException, FormatoArchivoException
    


/**
     * Genera un reporte con los costos de los escenarios en el festival. <br>
     * <b>post: </b> El reporte de los costos del festival fue generado. <br>
     * @param pRuta Ruta donde se desea guardar el archivo con el reporte. pRuta != null && pRuta != "".
     * @throws PersistenciaException Se lanza una excepción si hay un error en la generación del reporte.
     */
    public void generarReporte( String pRuta ) throws PersistenciaException
        


/**
     * Construye el festival con su estado inicial a partir de un archivo serializado. <br>
     * <b>post: </b> Si existe el archivo seralizado, cargar el archivo. <br>
     * Si hay algún problema cargando el archivo, lanza excepción. <br>
     * Si no existe el archivo seralizado, crea el arrayList vacío.
     * @param pRuta Ruta del archivo del cual se cargará el estado del mundo.
     * @throws PersistenciaException Se lanza una excepción si hay algún error cargando los datos del archivo.
     */
    public Festival( String pRuta ) throws PersistenciaException
    